➜  repro-ts-rollup-issue git:(master) ✗ npm run build             

> repro-ts-rollup-issue@1.0.0 prebuild $(REPOSITORY_ROOT)
> rimraf dist


> repro-ts-rollup-issue@1.0.0 build $(REPOSITORY_ROOT)
> rollup -c


src/index.ts → dist, dist/cjs...
created dist, dist/cjs in 1.1s
➜  repro-ts-rollup-issue git:(master) ✗ rm -rf node_modules/.cache
➜  repro-ts-rollup-issue git:(master) ✗ npm run build             

> repro-ts-rollup-issue@1.0.0 prebuild $(REPOSITORY_ROOT)
> rimraf dist


> repro-ts-rollup-issue@1.0.0 build $(REPOSITORY_ROOT)
> rollup -c


src/index.ts → dist, dist/cjs...
rpt2: built-in options overrides: {
    "noEmitHelpers": false,
    "importHelpers": true,
    "noResolve": false,
    "noEmit": false,
    "inlineSourceMap": false,
    "outDir": "$(REPOSITORY_ROOT)/node_modules/.cache/rollup-plugin-typescript2/placeholder",
    "moduleResolution": 2,
    "allowNonTsExtensions": true
}
rpt2: parsed tsconfig: {
    "options": {
        "baseUrl": "$(REPOSITORY_ROOT)",
        "moduleResolution": 2,
        "target": 1,
        "module": 5,
        "lib": [
            "lib.es2015.d.ts",
            "lib.es2016.d.ts",
            "lib.es2017.d.ts",
            "lib.dom.d.ts"
        ],
        "strict": true,
        "sourceMap": true,
        "declaration": true,
        "allowSyntheticDefaultImports": true,
        "experimentalDecorators": true,
        "emitDecoratorMetadata": true,
        "typeRoots": [
            "$(REPOSITORY_ROOT)/node_modules/@types"
        ],
        "paths": {
            "@types/*": [
                "./node_modules/@types/*"
            ]
        },
        "declarationDir": "$(REPOSITORY_ROOT)/dist",
        "outDir": "$(REPOSITORY_ROOT)/node_modules/.cache/rollup-plugin-typescript2/placeholder",
        "configFilePath": "$(REPOSITORY_ROOT)/tsconfig.json",
        "noEmitHelpers": false,
        "importHelpers": true,
        "noResolve": false,
        "noEmit": false,
        "inlineSourceMap": false,
        "allowNonTsExtensions": true
    },
    "fileNames": [
        "$(REPOSITORY_ROOT)/src/index.ts",
        "$(REPOSITORY_ROOT)/src/enums/index.ts",
        "$(REPOSITORY_ROOT)/src/enums/user-type.ts",
        "$(REPOSITORY_ROOT)/src/models/index.ts",
        "$(REPOSITORY_ROOT)/src/models/user.ts",
        "$(REPOSITORY_ROOT)/src/state/action.ts",
        "$(REPOSITORY_ROOT)/src/state/error-action.ts",
        "$(REPOSITORY_ROOT)/src/state/index.ts",
        "$(REPOSITORY_ROOT)/src/types/abc.ts",
        "$(REPOSITORY_ROOT)/src/types/error.ts",
        "$(REPOSITORY_ROOT)/src/types/index.ts",
        "$(REPOSITORY_ROOT)/src/utils/index.ts",
        "$(REPOSITORY_ROOT)/src/utils/is-error.ts"
    ],
    "typeAcquisition": {
        "enable": false,
        "include": [],
        "exclude": []
    },
    "raw": {
        "include": [
            "./src"
        ],
        "exclude": [
            "node_modules"
        ],
        "compilerOptions": {
            "baseUrl": ".",
            "moduleResolution": "node",
            "target": "es5",
            "module": "es2015",
            "lib": [
                "es2015",
                "es2016",
                "es2017",
                "dom"
            ],
            "strict": true,
            "sourceMap": true,
            "declaration": true,
            "allowSyntheticDefaultImports": true,
            "experimentalDecorators": true,
            "emitDecoratorMetadata": true,
            "typeRoots": [
                "node_modules/@types"
            ],
            "paths": {
                "@types/*": [
                    "./node_modules/@types/*"
                ]
            },
            "declarationDir": "./dist",
            "outDir": "./dist"
        },
        "compileOnSave": false
    },
    "errors": [],
    "wildcardDirectories": {
        "$(REPOSITORY_ROOT)/src": 1
    },
    "compileOnSave": false,
    "configFileSpecs": {
        "includeSpecs": [
            "./src"
        ],
        "excludeSpecs": [
            "node_modules"
        ],
        "validatedIncludeSpecs": [
            "./src"
        ],
        "validatedExcludeSpecs": [
            "node_modules"
        ],
        "wildcardDirectories": {
            "$(REPOSITORY_ROOT)/src": 1
        }
    }
}
rpt2: typescript version: 3.1.6
rpt2: tslib version: 1.10.0
rpt2: rollup version: 1.21.2
rpt2: rollup-plugin-typescript2 version: 0.24.2
rpt2: plugin options:
{
    "verbosity": 3,
    "typescript": "version 3.1.6",
    "useTsconfigDeclarationDir": true,
    "check": true,
    "clean": false,
    "cacheRoot": "$(REPOSITORY_ROOT)/node_modules/.cache/rollup-plugin-typescript2",
    "include": [
        "*.ts+(|x)",
        "**/*.ts+(|x)"
    ],
    "exclude": [
        "*.d.ts",
        "**/*.d.ts"
    ],
    "abortOnError": true,
    "rollupCommonJSResolveHack": false,
    "tsconfigOverride": {},
    "transformers": [],
    "tsconfigDefaults": {},
    "objectHashIgnoreUnknownHack": false
}
rpt2: rollup config:
{
    "chunkGroupingSize": 5000,
    "experimentalCacheExpiry": 10,
    "external": [
        "@getgo/raascal-enums",
        "@getgo/rtc-api",
        "rxjs"
    ],
    "inlineDynamicImports": false,
    "input": {
        "index": "src/index.ts"
    },
    "perf": false,
    "plugins": [
        {
            "name": "rpt2"
        }
    ],
    "preserveModules": true,
    "strictDeprecations": false
}
rpt2: tsconfig path: $(REPOSITORY_ROOT)/tsconfig.json
rpt2: included:
[
    "*.ts+(|x)",
    "**/*.ts+(|x)"
]
rpt2: excluded:
[
    "*.d.ts",
    "**/*.d.ts"
]
rpt2: Ambient types:
rpt2:     $(REPOSITORY_ROOT)/node_modules/@types/estree/index.d.ts
rpt2:     $(REPOSITORY_ROOT)/node_modules/@types/events/index.d.ts
rpt2:     $(REPOSITORY_ROOT)/node_modules/@types/fs-extra/index.d.ts
rpt2:     $(REPOSITORY_ROOT)/node_modules/@types/glob/index.d.ts
rpt2:     $(REPOSITORY_ROOT)/node_modules/@types/highlight.js/index.d.ts
rpt2:     $(REPOSITORY_ROOT)/node_modules/@types/lodash/ts3.1/index.d.ts
rpt2:     $(REPOSITORY_ROOT)/node_modules/@types/marked/index.d.ts
rpt2:     $(REPOSITORY_ROOT)/node_modules/@types/minimatch/index.d.ts
rpt2:     $(REPOSITORY_ROOT)/node_modules/@types/node/index.d.ts
rpt2:     $(REPOSITORY_ROOT)/node_modules/@types/shelljs/index.d.ts
rpt2: ambient types changed, redoing all semantic diagnostics
rpt2: transpiling '$(REPOSITORY_ROOT)/src/index.ts'
rpt2:     cache: '$(REPOSITORY_ROOT)/node_modules/.cache/rollup-plugin-typescript2/rpt2_968e6a8679361071a6b05ffc4b92adc715cacf25/code/cache/66871e496e44c1329f20d71c118b453eeb29a456'
rpt2:     cache miss
rpt2:     cache: '$(REPOSITORY_ROOT)/node_modules/.cache/rollup-plugin-typescript2/rpt2_968e6a8679361071a6b05ffc4b92adc715cacf25/syntacticDiagnostics/cache/66871e496e44c1329f20d71c118b453eeb29a456'
rpt2:     cache miss
rpt2:     cache: '$(REPOSITORY_ROOT)/node_modules/.cache/rollup-plugin-typescript2/rpt2_968e6a8679361071a6b05ffc4b92adc715cacf25/semanticDiagnostics/cache/66871e496e44c1329f20d71c118b453eeb29a456'
rpt2:     cache miss
rpt2: generated declarations for '$(REPOSITORY_ROOT)/src/index.ts'
rpt2: dependency '$(REPOSITORY_ROOT)/src/utils/index.ts'
rpt2:     imported by '$(REPOSITORY_ROOT)/src/index.ts'
rpt2: resolving './utils' imported by '$(REPOSITORY_ROOT)/src/index.ts'
rpt2:     to '$(REPOSITORY_ROOT)/src/utils/index.ts'
rpt2: transpiling '$(REPOSITORY_ROOT)/src/utils/index.ts'
rpt2:     cache: '$(REPOSITORY_ROOT)/node_modules/.cache/rollup-plugin-typescript2/rpt2_968e6a8679361071a6b05ffc4b92adc715cacf25/code/cache/41c6fbaa61283343ef28b9b85b15542f2f43e317'
rpt2:     cache miss
rpt2:     cache: '$(REPOSITORY_ROOT)/node_modules/.cache/rollup-plugin-typescript2/rpt2_968e6a8679361071a6b05ffc4b92adc715cacf25/syntacticDiagnostics/cache/41c6fbaa61283343ef28b9b85b15542f2f43e317'
rpt2:     cache miss
rpt2:     cache: '$(REPOSITORY_ROOT)/node_modules/.cache/rollup-plugin-typescript2/rpt2_968e6a8679361071a6b05ffc4b92adc715cacf25/semanticDiagnostics/cache/41c6fbaa61283343ef28b9b85b15542f2f43e317'
rpt2:     cache miss
rpt2: generated declarations for '$(REPOSITORY_ROOT)/src/utils/index.ts'
rpt2: dependency '$(REPOSITORY_ROOT)/src/utils/is-error.ts'
rpt2:     imported by '$(REPOSITORY_ROOT)/src/utils/index.ts'
rpt2: resolving './is-error' imported by '$(REPOSITORY_ROOT)/src/utils/index.ts'
rpt2:     to '$(REPOSITORY_ROOT)/src/utils/is-error.ts'
rpt2: transpiling '$(REPOSITORY_ROOT)/src/utils/is-error.ts'
rpt2:     cache: '$(REPOSITORY_ROOT)/node_modules/.cache/rollup-plugin-typescript2/rpt2_968e6a8679361071a6b05ffc4b92adc715cacf25/code/cache/61cd55cd6839a61a3e6670fb5bf5362fc83ba0a0'
rpt2:     cache miss
rpt2:     cache: '$(REPOSITORY_ROOT)/node_modules/.cache/rollup-plugin-typescript2/rpt2_968e6a8679361071a6b05ffc4b92adc715cacf25/syntacticDiagnostics/cache/61cd55cd6839a61a3e6670fb5bf5362fc83ba0a0'
rpt2:     cache miss
rpt2:     cache: '$(REPOSITORY_ROOT)/node_modules/.cache/rollup-plugin-typescript2/rpt2_968e6a8679361071a6b05ffc4b92adc715cacf25/semanticDiagnostics/cache/61cd55cd6839a61a3e6670fb5bf5362fc83ba0a0'
rpt2:     cache miss
rpt2: generated declarations for '$(REPOSITORY_ROOT)/src/utils/is-error.ts'
rpt2: generating target 1
rpt2: rolling caches
rpt2: skipping declarations for unused '$(REPOSITORY_ROOT)/src/enums/index.ts'
rpt2: skipping declarations for unused '$(REPOSITORY_ROOT)/src/enums/user-type.ts'
rpt2: generating missed declarations for '$(REPOSITORY_ROOT)/src/models/index.ts'
rpt2: skipping declarations for unused '$(REPOSITORY_ROOT)/src/models/user.ts'
rpt2: skipping declarations for unused '$(REPOSITORY_ROOT)/src/state/action.ts'
rpt2: skipping declarations for unused '$(REPOSITORY_ROOT)/src/state/error-action.ts'
rpt2: generating missed declarations for '$(REPOSITORY_ROOT)/src/state/index.ts'
rpt2: skipping declarations for unused '$(REPOSITORY_ROOT)/src/types/abc.ts'
rpt2: skipping declarations for unused '$(REPOSITORY_ROOT)/src/types/error.ts'
rpt2: generating missed declarations for '$(REPOSITORY_ROOT)/src/types/index.ts'
rpt2: writing declarations for '$(REPOSITORY_ROOT)/src/index.ts' to '$(REPOSITORY_ROOT)/dist/index.d.ts'
rpt2: writing declarations for '$(REPOSITORY_ROOT)/src/utils/index.ts' to '$(REPOSITORY_ROOT)/dist/utils/index.d.ts'
rpt2: writing declarations for '$(REPOSITORY_ROOT)/src/utils/is-error.ts' to '$(REPOSITORY_ROOT)/dist/utils/is-error.d.ts'
rpt2: writing declarations for '$(REPOSITORY_ROOT)/src/models/index.ts' to '$(REPOSITORY_ROOT)/dist/models/index.d.ts'
rpt2: writing declarations for '$(REPOSITORY_ROOT)/src/state/index.ts' to '$(REPOSITORY_ROOT)/dist/state/index.d.ts'
rpt2: writing declarations for '$(REPOSITORY_ROOT)/src/types/index.ts' to '$(REPOSITORY_ROOT)/dist/types/index.d.ts'
rpt2: generating target 2
rpt2: rolling caches
rpt2: skipping declarations for unused '$(REPOSITORY_ROOT)/src/enums/index.ts'
rpt2: skipping declarations for unused '$(REPOSITORY_ROOT)/src/enums/user-type.ts'
rpt2: skipping declarations for unused '$(REPOSITORY_ROOT)/src/models/user.ts'
rpt2: skipping declarations for unused '$(REPOSITORY_ROOT)/src/state/action.ts'
rpt2: skipping declarations for unused '$(REPOSITORY_ROOT)/src/state/error-action.ts'
rpt2: skipping declarations for unused '$(REPOSITORY_ROOT)/src/types/abc.ts'
rpt2: skipping declarations for unused '$(REPOSITORY_ROOT)/src/types/error.ts'
rpt2: writing declarations for '$(REPOSITORY_ROOT)/src/index.ts' to '$(REPOSITORY_ROOT)/dist/index.d.ts'
rpt2: writing declarations for '$(REPOSITORY_ROOT)/src/utils/index.ts' to '$(REPOSITORY_ROOT)/dist/utils/index.d.ts'
rpt2: writing declarations for '$(REPOSITORY_ROOT)/src/utils/is-error.ts' to '$(REPOSITORY_ROOT)/dist/utils/is-error.d.ts'
rpt2: writing declarations for '$(REPOSITORY_ROOT)/src/models/index.ts' to '$(REPOSITORY_ROOT)/dist/models/index.d.ts'
rpt2: writing declarations for '$(REPOSITORY_ROOT)/src/state/index.ts' to '$(REPOSITORY_ROOT)/dist/state/index.d.ts'
rpt2: writing declarations for '$(REPOSITORY_ROOT)/src/types/index.ts' to '$(REPOSITORY_ROOT)/dist/types/index.d.ts'
created dist, dist/cjs in 1s